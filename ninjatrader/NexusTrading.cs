// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nexus_trading.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nexus.Trading {

  /// <summary>Holder for reflection information generated from nexus_trading.proto</summary>
  public static partial class NexusTradingReflection {

    #region Descriptor
    /// <summary>File descriptor for nexus_trading.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NexusTradingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNuZXh1c190cmFkaW5nLnByb3RvEg1uZXh1cy50cmFkaW5nIpYCCgpMZXZl",
            "bDFEYXRhEg4KBnN5bWJvbBgBIAEoCRIRCgl0aW1lc3RhbXAYAiABKAESEgoK",
            "bGFzdF9wcmljZRgDIAEoARIRCglsYXN0X3NpemUYBCABKAESCwoDYmlkGAUg",
            "ASgBEgsKA2FzaxgGIAEoARIQCghiaWRfc2l6ZRgHIAEoBRIQCghhc2tfc2l6",
            "ZRgIIAEoBRIMCgRvcGVuGAkgASgBEgwKBGhpZ2gYCiABKAESCwoDbG93GAsg",
            "ASgBEg0KBWNsb3NlGAwgASgBEg4KBnZvbHVtZRgNIAEoARIMCgR2d2FwGA4g",
            "ASgBEhMKC3RyYWRlX2NvdW50GA8gASgDEhUKDW9wZW5faW50ZXJlc3QYECAB",
            "KAEiiAIKCkxldmVsMkRhdGESDgoGc3ltYm9sGAEgASgJEhEKCXRpbWVzdGFt",
            "cBgCIAEoARInCgRiaWRzGAMgAygLMhkubmV4dXMudHJhZGluZy5QcmljZUxl",
            "dmVsEicKBGFza3MYBCADKAsyGS5uZXh1cy50cmFkaW5nLlByaWNlTGV2ZWwS",
            "EQoJYmlkX2RlcHRoGAUgASgFEhEKCWFza19kZXB0aBgGIAEoBRIYChB0b3Rh",
            "bF9iaWRfdm9sdW1lGAcgASgBEhgKEHRvdGFsX2Fza192b2x1bWUYCCABKAES",
            "FwoPb3JkZXJfaW1iYWxhbmNlGAkgASgBEhIKCnNwcmVhZF9icHMYCiABKAEi",
            "TwoKUHJpY2VMZXZlbBINCgVwcmljZRgBIAEoARIMCgRzaXplGAIgASgBEhIK",
            "Cm51bV9vcmRlcnMYAyABKAUSEAoIZXhjaGFuZ2UYBCABKAki8AEKCk1hcmtl",
            "dERhdGESDgoGc3ltYm9sGAEgASgJEhEKCXRpbWVzdGFtcBgCIAEoARIpCgZs",
            "ZXZlbDEYAyABKAsyGS5uZXh1cy50cmFkaW5nLkxldmVsMURhdGESKQoGbGV2",
            "ZWwyGAQgASgLMhkubmV4dXMudHJhZGluZy5MZXZlbDJEYXRhEjUKCWRhdGFf",
            "dHlwZRgFIAEoDjIiLm5leHVzLnRyYWRpbmcuTWFya2V0RGF0YS5EYXRhVHlw",
            "ZSIyCghEYXRhVHlwZRIPCgtMRVZFTDFfT05MWRAAEhUKEUxFVkVMMV9BTkRf",
            "TEVWRUwyEAEi/wEKDVRyYWRpbmdTaWduYWwSPAoLc2lnbmFsX3R5cGUYASAB",
            "KA4yJy5uZXh1cy50cmFkaW5nLlRyYWRpbmdTaWduYWwuU2lnbmFsVHlwZRIS",
            "Cgpjb25maWRlbmNlGAIgASgBEg4KBnN5bWJvbBgDIAEoCRIVCg1wb3NpdGlv",
            "bl9zaXplGAQgASgBEhEKCXN0b3BfbG9zcxgFIAEoARITCgt0YWtlX3Byb2Zp",
            "dBgGIAEoASJNCgpTaWduYWxUeXBlEgsKB05FVVRSQUwQABIHCgNCVVkQARII",
            "CgRTRUxMEAISDgoKU1RST05HX0JVWRADEg8KC1NUUk9OR19TRUxMEAQiaAoF",
            "T3JkZXISEAoIb3JkZXJfaWQYASABKAkSDgoGc3ltYm9sGAIgASgJEgwKBHNp",
            "ZGUYAyABKAkSEAoIcXVhbnRpdHkYBCABKAESDQoFcHJpY2UYBSABKAESDgoG",
            "c3RhdHVzGAYgASgJIn0KCFBvc2l0aW9uEg4KBnN5bWJvbBgBIAEoCRIQCghx",
            "dWFudGl0eRgCIAEoARIRCglhdmdfcHJpY2UYAyABKAESFgoOdW5yZWFsaXpl",
            "ZF9wbmwYBCABKAESFAoMcmVhbGl6ZWRfcG5sGAUgASgBEg4KBnN0YXR1cxgG",
            "IAEoCSI6CgxQb3NpdGlvbkxpc3QSKgoJcG9zaXRpb25zGAEgAygLMhcubmV4",
            "dXMudHJhZGluZy5Qb3NpdGlvbiIHCgVFbXB0eTL5AgoOVHJhZGluZ1NlcnZp",
            "Y2USTwoQU3RyZWFtTWFya2V0RGF0YRIZLm5leHVzLnRyYWRpbmcuTWFya2V0",
            "RGF0YRocLm5leHVzLnRyYWRpbmcuVHJhZGluZ1NpZ25hbCgBMAESSwoMU3Ry",
            "ZWFtTGV2ZWwxEhkubmV4dXMudHJhZGluZy5MZXZlbDFEYXRhGhwubmV4dXMu",
            "dHJhZGluZy5UcmFkaW5nU2lnbmFsKAEwARJLCgxTdHJlYW1MZXZlbDISGS5u",
            "ZXh1cy50cmFkaW5nLkxldmVsMkRhdGEaHC5uZXh1cy50cmFkaW5nLlRyYWRp",
            "bmdTaWduYWwoATABEjkKC1N1Ym1pdE9yZGVyEhQubmV4dXMudHJhZGluZy5P",
            "cmRlchoULm5leHVzLnRyYWRpbmcuT3JkZXISQQoMR2V0UG9zaXRpb25zEhQu",
            "bmV4dXMudHJhZGluZy5FbXB0eRobLm5leHVzLnRyYWRpbmcuUG9zaXRpb25M",
            "aXN0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.Level1Data), global::Nexus.Trading.Level1Data.Parser, new[]{ "Symbol", "Timestamp", "LastPrice", "LastSize", "Bid", "Ask", "BidSize", "AskSize", "Open", "High", "Low", "Close", "Volume", "Vwap", "TradeCount", "OpenInterest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.Level2Data), global::Nexus.Trading.Level2Data.Parser, new[]{ "Symbol", "Timestamp", "Bids", "Asks", "BidDepth", "AskDepth", "TotalBidVolume", "TotalAskVolume", "OrderImbalance", "SpreadBps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.PriceLevel), global::Nexus.Trading.PriceLevel.Parser, new[]{ "Price", "Size", "NumOrders", "Exchange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.MarketData), global::Nexus.Trading.MarketData.Parser, new[]{ "Symbol", "Timestamp", "Level1", "Level2", "DataType" }, null, new[]{ typeof(global::Nexus.Trading.MarketData.Types.DataType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.TradingSignal), global::Nexus.Trading.TradingSignal.Parser, new[]{ "SignalType", "Confidence", "Symbol", "PositionSize", "StopLoss", "TakeProfit" }, null, new[]{ typeof(global::Nexus.Trading.TradingSignal.Types.SignalType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.Order), global::Nexus.Trading.Order.Parser, new[]{ "OrderId", "Symbol", "Side", "Quantity", "Price", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.Position), global::Nexus.Trading.Position.Parser, new[]{ "Symbol", "Quantity", "AvgPrice", "UnrealizedPnl", "RealizedPnl", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.PositionList), global::Nexus.Trading.PositionList.Parser, new[]{ "Positions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nexus.Trading.Empty), global::Nexus.Trading.Empty.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// ============================================================================
  /// LEVEL 1 MARKET DATA (Best Bid/Offer)
  /// ============================================================================
  /// </summary>
  public sealed partial class Level1Data : pb::IMessage<Level1Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Level1Data> _parser = new pb::MessageParser<Level1Data>(() => new Level1Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Level1Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level1Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level1Data(Level1Data other) : this() {
      symbol_ = other.symbol_;
      timestamp_ = other.timestamp_;
      lastPrice_ = other.lastPrice_;
      lastSize_ = other.lastSize_;
      bid_ = other.bid_;
      ask_ = other.ask_;
      bidSize_ = other.bidSize_;
      askSize_ = other.askSize_;
      open_ = other.open_;
      high_ = other.high_;
      low_ = other.low_;
      close_ = other.close_;
      volume_ = other.volume_;
      vwap_ = other.vwap_;
      tradeCount_ = other.tradeCount_;
      openInterest_ = other.openInterest_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level1Data Clone() {
      return new Level1Data(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private double timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "last_price" field.</summary>
    public const int LastPriceFieldNumber = 3;
    private double lastPrice_;
    /// <summary>
    /// Last Trade
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LastPrice {
      get { return lastPrice_; }
      set {
        lastPrice_ = value;
      }
    }

    /// <summary>Field number for the "last_size" field.</summary>
    public const int LastSizeFieldNumber = 4;
    private double lastSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LastSize {
      get { return lastSize_; }
      set {
        lastSize_ = value;
      }
    }

    /// <summary>Field number for the "bid" field.</summary>
    public const int BidFieldNumber = 5;
    private double bid_;
    /// <summary>
    /// Best Bid/Offer (BBO)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bid {
      get { return bid_; }
      set {
        bid_ = value;
      }
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 6;
    private double ask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Ask {
      get { return ask_; }
      set {
        ask_ = value;
      }
    }

    /// <summary>Field number for the "bid_size" field.</summary>
    public const int BidSizeFieldNumber = 7;
    private int bidSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidSize {
      get { return bidSize_; }
      set {
        bidSize_ = value;
      }
    }

    /// <summary>Field number for the "ask_size" field.</summary>
    public const int AskSizeFieldNumber = 8;
    private int askSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskSize {
      get { return askSize_; }
      set {
        askSize_ = value;
      }
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 9;
    private double open_;
    /// <summary>
    /// Daily Stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    /// <summary>Field number for the "high" field.</summary>
    public const int HighFieldNumber = 10;
    private double high_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double High {
      get { return high_; }
      set {
        high_ = value;
      }
    }

    /// <summary>Field number for the "low" field.</summary>
    public const int LowFieldNumber = 11;
    private double low_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Low {
      get { return low_; }
      set {
        low_ = value;
      }
    }

    /// <summary>Field number for the "close" field.</summary>
    public const int CloseFieldNumber = 12;
    private double close_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Close {
      get { return close_; }
      set {
        close_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 13;
    private double volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    /// <summary>Field number for the "vwap" field.</summary>
    public const int VwapFieldNumber = 14;
    private double vwap_;
    /// <summary>
    /// Additional Level 1 Fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Vwap {
      get { return vwap_; }
      set {
        vwap_ = value;
      }
    }

    /// <summary>Field number for the "trade_count" field.</summary>
    public const int TradeCountFieldNumber = 15;
    private long tradeCount_;
    /// <summary>
    /// Number of trades
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TradeCount {
      get { return tradeCount_; }
      set {
        tradeCount_ = value;
      }
    }

    /// <summary>Field number for the "open_interest" field.</summary>
    public const int OpenInterestFieldNumber = 16;
    private double openInterest_;
    /// <summary>
    /// For futures
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OpenInterest {
      get { return openInterest_; }
      set {
        openInterest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Level1Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Level1Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Timestamp, other.Timestamp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastPrice, other.LastPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastSize, other.LastSize)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bid, other.Bid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ask, other.Ask)) return false;
      if (BidSize != other.BidSize) return false;
      if (AskSize != other.AskSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Open, other.Open)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(High, other.High)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Low, other.Low)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Close, other.Close)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Volume, other.Volume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Vwap, other.Vwap)) return false;
      if (TradeCount != other.TradeCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OpenInterest, other.OpenInterest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Timestamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Timestamp);
      if (LastPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastPrice);
      if (LastSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastSize);
      if (Bid != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bid);
      if (Ask != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ask);
      if (BidSize != 0) hash ^= BidSize.GetHashCode();
      if (AskSize != 0) hash ^= AskSize.GetHashCode();
      if (Open != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Open);
      if (High != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(High);
      if (Low != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Low);
      if (Close != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Close);
      if (Volume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Volume);
      if (Vwap != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Vwap);
      if (TradeCount != 0L) hash ^= TradeCount.GetHashCode();
      if (OpenInterest != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OpenInterest);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      if (LastPrice != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LastPrice);
      }
      if (LastSize != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(LastSize);
      }
      if (Bid != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Bid);
      }
      if (Ask != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Ask);
      }
      if (BidSize != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AskSize);
      }
      if (Open != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Open);
      }
      if (High != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(High);
      }
      if (Low != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Low);
      }
      if (Close != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(Close);
      }
      if (Volume != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(Volume);
      }
      if (Vwap != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Vwap);
      }
      if (TradeCount != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(TradeCount);
      }
      if (OpenInterest != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(OpenInterest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      if (LastPrice != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LastPrice);
      }
      if (LastSize != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(LastSize);
      }
      if (Bid != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Bid);
      }
      if (Ask != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Ask);
      }
      if (BidSize != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BidSize);
      }
      if (AskSize != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AskSize);
      }
      if (Open != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Open);
      }
      if (High != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(High);
      }
      if (Low != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Low);
      }
      if (Close != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(Close);
      }
      if (Volume != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(Volume);
      }
      if (Vwap != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Vwap);
      }
      if (TradeCount != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(TradeCount);
      }
      if (OpenInterest != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(OpenInterest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Timestamp != 0D) {
        size += 1 + 8;
      }
      if (LastPrice != 0D) {
        size += 1 + 8;
      }
      if (LastSize != 0D) {
        size += 1 + 8;
      }
      if (Bid != 0D) {
        size += 1 + 8;
      }
      if (Ask != 0D) {
        size += 1 + 8;
      }
      if (BidSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BidSize);
      }
      if (AskSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AskSize);
      }
      if (Open != 0D) {
        size += 1 + 8;
      }
      if (High != 0D) {
        size += 1 + 8;
      }
      if (Low != 0D) {
        size += 1 + 8;
      }
      if (Close != 0D) {
        size += 1 + 8;
      }
      if (Volume != 0D) {
        size += 1 + 8;
      }
      if (Vwap != 0D) {
        size += 1 + 8;
      }
      if (TradeCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TradeCount);
      }
      if (OpenInterest != 0D) {
        size += 2 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Level1Data other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Timestamp != 0D) {
        Timestamp = other.Timestamp;
      }
      if (other.LastPrice != 0D) {
        LastPrice = other.LastPrice;
      }
      if (other.LastSize != 0D) {
        LastSize = other.LastSize;
      }
      if (other.Bid != 0D) {
        Bid = other.Bid;
      }
      if (other.Ask != 0D) {
        Ask = other.Ask;
      }
      if (other.BidSize != 0) {
        BidSize = other.BidSize;
      }
      if (other.AskSize != 0) {
        AskSize = other.AskSize;
      }
      if (other.Open != 0D) {
        Open = other.Open;
      }
      if (other.High != 0D) {
        High = other.High;
      }
      if (other.Low != 0D) {
        Low = other.Low;
      }
      if (other.Close != 0D) {
        Close = other.Close;
      }
      if (other.Volume != 0D) {
        Volume = other.Volume;
      }
      if (other.Vwap != 0D) {
        Vwap = other.Vwap;
      }
      if (other.TradeCount != 0L) {
        TradeCount = other.TradeCount;
      }
      if (other.OpenInterest != 0D) {
        OpenInterest = other.OpenInterest;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 25: {
            LastPrice = input.ReadDouble();
            break;
          }
          case 33: {
            LastSize = input.ReadDouble();
            break;
          }
          case 41: {
            Bid = input.ReadDouble();
            break;
          }
          case 49: {
            Ask = input.ReadDouble();
            break;
          }
          case 56: {
            BidSize = input.ReadInt32();
            break;
          }
          case 64: {
            AskSize = input.ReadInt32();
            break;
          }
          case 73: {
            Open = input.ReadDouble();
            break;
          }
          case 81: {
            High = input.ReadDouble();
            break;
          }
          case 89: {
            Low = input.ReadDouble();
            break;
          }
          case 97: {
            Close = input.ReadDouble();
            break;
          }
          case 105: {
            Volume = input.ReadDouble();
            break;
          }
          case 113: {
            Vwap = input.ReadDouble();
            break;
          }
          case 120: {
            TradeCount = input.ReadInt64();
            break;
          }
          case 129: {
            OpenInterest = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 25: {
            LastPrice = input.ReadDouble();
            break;
          }
          case 33: {
            LastSize = input.ReadDouble();
            break;
          }
          case 41: {
            Bid = input.ReadDouble();
            break;
          }
          case 49: {
            Ask = input.ReadDouble();
            break;
          }
          case 56: {
            BidSize = input.ReadInt32();
            break;
          }
          case 64: {
            AskSize = input.ReadInt32();
            break;
          }
          case 73: {
            Open = input.ReadDouble();
            break;
          }
          case 81: {
            High = input.ReadDouble();
            break;
          }
          case 89: {
            Low = input.ReadDouble();
            break;
          }
          case 97: {
            Close = input.ReadDouble();
            break;
          }
          case 105: {
            Volume = input.ReadDouble();
            break;
          }
          case 113: {
            Vwap = input.ReadDouble();
            break;
          }
          case 120: {
            TradeCount = input.ReadInt64();
            break;
          }
          case 129: {
            OpenInterest = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ============================================================================
  /// LEVEL 2 MARKET DATA (Market Depth / Order Book)
  /// ============================================================================
  /// </summary>
  public sealed partial class Level2Data : pb::IMessage<Level2Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Level2Data> _parser = new pb::MessageParser<Level2Data>(() => new Level2Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Level2Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level2Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level2Data(Level2Data other) : this() {
      symbol_ = other.symbol_;
      timestamp_ = other.timestamp_;
      bids_ = other.bids_.Clone();
      asks_ = other.asks_.Clone();
      bidDepth_ = other.bidDepth_;
      askDepth_ = other.askDepth_;
      totalBidVolume_ = other.totalBidVolume_;
      totalAskVolume_ = other.totalAskVolume_;
      orderImbalance_ = other.orderImbalance_;
      spreadBps_ = other.spreadBps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level2Data Clone() {
      return new Level2Data(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private double timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "bids" field.</summary>
    public const int BidsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Nexus.Trading.PriceLevel> _repeated_bids_codec
        = pb::FieldCodec.ForMessage(26, global::Nexus.Trading.PriceLevel.Parser);
    private readonly pbc::RepeatedField<global::Nexus.Trading.PriceLevel> bids_ = new pbc::RepeatedField<global::Nexus.Trading.PriceLevel>();
    /// <summary>
    /// Order Book Depth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Nexus.Trading.PriceLevel> Bids {
      get { return bids_; }
    }

    /// <summary>Field number for the "asks" field.</summary>
    public const int AsksFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Nexus.Trading.PriceLevel> _repeated_asks_codec
        = pb::FieldCodec.ForMessage(34, global::Nexus.Trading.PriceLevel.Parser);
    private readonly pbc::RepeatedField<global::Nexus.Trading.PriceLevel> asks_ = new pbc::RepeatedField<global::Nexus.Trading.PriceLevel>();
    /// <summary>
    /// Ask side (sell orders)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Nexus.Trading.PriceLevel> Asks {
      get { return asks_; }
    }

    /// <summary>Field number for the "bid_depth" field.</summary>
    public const int BidDepthFieldNumber = 5;
    private int bidDepth_;
    /// <summary>
    /// Book Statistics
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BidDepth {
      get { return bidDepth_; }
      set {
        bidDepth_ = value;
      }
    }

    /// <summary>Field number for the "ask_depth" field.</summary>
    public const int AskDepthFieldNumber = 6;
    private int askDepth_;
    /// <summary>
    /// Number of ask levels
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AskDepth {
      get { return askDepth_; }
      set {
        askDepth_ = value;
      }
    }

    /// <summary>Field number for the "total_bid_volume" field.</summary>
    public const int TotalBidVolumeFieldNumber = 7;
    private double totalBidVolume_;
    /// <summary>
    /// Total volume on bid side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalBidVolume {
      get { return totalBidVolume_; }
      set {
        totalBidVolume_ = value;
      }
    }

    /// <summary>Field number for the "total_ask_volume" field.</summary>
    public const int TotalAskVolumeFieldNumber = 8;
    private double totalAskVolume_;
    /// <summary>
    /// Total volume on ask side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalAskVolume {
      get { return totalAskVolume_; }
      set {
        totalAskVolume_ = value;
      }
    }

    /// <summary>Field number for the "order_imbalance" field.</summary>
    public const int OrderImbalanceFieldNumber = 9;
    private double orderImbalance_;
    /// <summary>
    /// Imbalance Metrics
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OrderImbalance {
      get { return orderImbalance_; }
      set {
        orderImbalance_ = value;
      }
    }

    /// <summary>Field number for the "spread_bps" field.</summary>
    public const int SpreadBpsFieldNumber = 10;
    private double spreadBps_;
    /// <summary>
    /// Spread in basis points
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SpreadBps {
      get { return spreadBps_; }
      set {
        spreadBps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Level2Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Level2Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Timestamp, other.Timestamp)) return false;
      if(!bids_.Equals(other.bids_)) return false;
      if(!asks_.Equals(other.asks_)) return false;
      if (BidDepth != other.BidDepth) return false;
      if (AskDepth != other.AskDepth) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalBidVolume, other.TotalBidVolume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalAskVolume, other.TotalAskVolume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OrderImbalance, other.OrderImbalance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SpreadBps, other.SpreadBps)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Timestamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Timestamp);
      hash ^= bids_.GetHashCode();
      hash ^= asks_.GetHashCode();
      if (BidDepth != 0) hash ^= BidDepth.GetHashCode();
      if (AskDepth != 0) hash ^= AskDepth.GetHashCode();
      if (TotalBidVolume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalBidVolume);
      if (TotalAskVolume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalAskVolume);
      if (OrderImbalance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OrderImbalance);
      if (SpreadBps != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SpreadBps);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      bids_.WriteTo(output, _repeated_bids_codec);
      asks_.WriteTo(output, _repeated_asks_codec);
      if (BidDepth != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BidDepth);
      }
      if (AskDepth != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AskDepth);
      }
      if (TotalBidVolume != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(TotalBidVolume);
      }
      if (TotalAskVolume != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(TotalAskVolume);
      }
      if (OrderImbalance != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(OrderImbalance);
      }
      if (SpreadBps != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(SpreadBps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      bids_.WriteTo(ref output, _repeated_bids_codec);
      asks_.WriteTo(ref output, _repeated_asks_codec);
      if (BidDepth != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BidDepth);
      }
      if (AskDepth != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AskDepth);
      }
      if (TotalBidVolume != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(TotalBidVolume);
      }
      if (TotalAskVolume != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(TotalAskVolume);
      }
      if (OrderImbalance != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(OrderImbalance);
      }
      if (SpreadBps != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(SpreadBps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Timestamp != 0D) {
        size += 1 + 8;
      }
      size += bids_.CalculateSize(_repeated_bids_codec);
      size += asks_.CalculateSize(_repeated_asks_codec);
      if (BidDepth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BidDepth);
      }
      if (AskDepth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AskDepth);
      }
      if (TotalBidVolume != 0D) {
        size += 1 + 8;
      }
      if (TotalAskVolume != 0D) {
        size += 1 + 8;
      }
      if (OrderImbalance != 0D) {
        size += 1 + 8;
      }
      if (SpreadBps != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Level2Data other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Timestamp != 0D) {
        Timestamp = other.Timestamp;
      }
      bids_.Add(other.bids_);
      asks_.Add(other.asks_);
      if (other.BidDepth != 0) {
        BidDepth = other.BidDepth;
      }
      if (other.AskDepth != 0) {
        AskDepth = other.AskDepth;
      }
      if (other.TotalBidVolume != 0D) {
        TotalBidVolume = other.TotalBidVolume;
      }
      if (other.TotalAskVolume != 0D) {
        TotalAskVolume = other.TotalAskVolume;
      }
      if (other.OrderImbalance != 0D) {
        OrderImbalance = other.OrderImbalance;
      }
      if (other.SpreadBps != 0D) {
        SpreadBps = other.SpreadBps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 26: {
            bids_.AddEntriesFrom(input, _repeated_bids_codec);
            break;
          }
          case 34: {
            asks_.AddEntriesFrom(input, _repeated_asks_codec);
            break;
          }
          case 40: {
            BidDepth = input.ReadInt32();
            break;
          }
          case 48: {
            AskDepth = input.ReadInt32();
            break;
          }
          case 57: {
            TotalBidVolume = input.ReadDouble();
            break;
          }
          case 65: {
            TotalAskVolume = input.ReadDouble();
            break;
          }
          case 73: {
            OrderImbalance = input.ReadDouble();
            break;
          }
          case 81: {
            SpreadBps = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 26: {
            bids_.AddEntriesFrom(ref input, _repeated_bids_codec);
            break;
          }
          case 34: {
            asks_.AddEntriesFrom(ref input, _repeated_asks_codec);
            break;
          }
          case 40: {
            BidDepth = input.ReadInt32();
            break;
          }
          case 48: {
            AskDepth = input.ReadInt32();
            break;
          }
          case 57: {
            TotalBidVolume = input.ReadDouble();
            break;
          }
          case 65: {
            TotalAskVolume = input.ReadDouble();
            break;
          }
          case 73: {
            OrderImbalance = input.ReadDouble();
            break;
          }
          case 81: {
            SpreadBps = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriceLevel : pb::IMessage<PriceLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriceLevel> _parser = new pb::MessageParser<PriceLevel>(() => new PriceLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriceLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceLevel(PriceLevel other) : this() {
      price_ = other.price_;
      size_ = other.size_;
      numOrders_ = other.numOrders_;
      exchange_ = other.exchange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceLevel Clone() {
      return new PriceLevel(this);
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 1;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private double size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "num_orders" field.</summary>
    public const int NumOrdersFieldNumber = 3;
    private int numOrders_;
    /// <summary>
    /// Number of orders at this level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumOrders {
      get { return numOrders_; }
      set {
        numOrders_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 4;
    private string exchange_ = "";
    /// <summary>
    /// Exchange/ECN identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return exchange_; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriceLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriceLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Size, other.Size)) return false;
      if (NumOrders != other.NumOrders) return false;
      if (Exchange != other.Exchange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (Size != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Size);
      if (NumOrders != 0) hash ^= NumOrders.GetHashCode();
      if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Price != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Price);
      }
      if (Size != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Size);
      }
      if (NumOrders != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumOrders);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Exchange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Price != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Price);
      }
      if (Size != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Size);
      }
      if (NumOrders != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumOrders);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Exchange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (Size != 0D) {
        size += 1 + 8;
      }
      if (NumOrders != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumOrders);
      }
      if (Exchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriceLevel other) {
      if (other == null) {
        return;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.Size != 0D) {
        Size = other.Size;
      }
      if (other.NumOrders != 0) {
        NumOrders = other.NumOrders;
      }
      if (other.Exchange.Length != 0) {
        Exchange = other.Exchange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Price = input.ReadDouble();
            break;
          }
          case 17: {
            Size = input.ReadDouble();
            break;
          }
          case 24: {
            NumOrders = input.ReadInt32();
            break;
          }
          case 34: {
            Exchange = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Price = input.ReadDouble();
            break;
          }
          case 17: {
            Size = input.ReadDouble();
            break;
          }
          case 24: {
            NumOrders = input.ReadInt32();
            break;
          }
          case 34: {
            Exchange = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Combined Market Data Message
  /// </summary>
  public sealed partial class MarketData : pb::IMessage<MarketData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketData> _parser = new pb::MessageParser<MarketData>(() => new MarketData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketData(MarketData other) : this() {
      symbol_ = other.symbol_;
      timestamp_ = other.timestamp_;
      level1_ = other.level1_ != null ? other.level1_.Clone() : null;
      level2_ = other.level2_ != null ? other.level2_.Clone() : null;
      dataType_ = other.dataType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketData Clone() {
      return new MarketData(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private double timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "level1" field.</summary>
    public const int Level1FieldNumber = 3;
    private global::Nexus.Trading.Level1Data level1_;
    /// <summary>
    /// Level 1 Data (always included)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Nexus.Trading.Level1Data Level1 {
      get { return level1_; }
      set {
        level1_ = value;
      }
    }

    /// <summary>Field number for the "level2" field.</summary>
    public const int Level2FieldNumber = 4;
    private global::Nexus.Trading.Level2Data level2_;
    /// <summary>
    /// Level 2 Data (optional, for strategies that need depth)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Nexus.Trading.Level2Data Level2 {
      get { return level2_; }
      set {
        level2_ = value;
      }
    }

    /// <summary>Field number for the "data_type" field.</summary>
    public const int DataTypeFieldNumber = 5;
    private global::Nexus.Trading.MarketData.Types.DataType dataType_ = global::Nexus.Trading.MarketData.Types.DataType.Level1Only;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Nexus.Trading.MarketData.Types.DataType DataType {
      get { return dataType_; }
      set {
        dataType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Level1, other.Level1)) return false;
      if (!object.Equals(Level2, other.Level2)) return false;
      if (DataType != other.DataType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Timestamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Timestamp);
      if (level1_ != null) hash ^= Level1.GetHashCode();
      if (level2_ != null) hash ^= Level2.GetHashCode();
      if (DataType != global::Nexus.Trading.MarketData.Types.DataType.Level1Only) hash ^= DataType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      if (level1_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Level1);
      }
      if (level2_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Level2);
      }
      if (DataType != global::Nexus.Trading.MarketData.Types.DataType.Level1Only) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DataType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      if (level1_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Level1);
      }
      if (level2_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Level2);
      }
      if (DataType != global::Nexus.Trading.MarketData.Types.DataType.Level1Only) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DataType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Timestamp != 0D) {
        size += 1 + 8;
      }
      if (level1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Level1);
      }
      if (level2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Level2);
      }
      if (DataType != global::Nexus.Trading.MarketData.Types.DataType.Level1Only) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Timestamp != 0D) {
        Timestamp = other.Timestamp;
      }
      if (other.level1_ != null) {
        if (level1_ == null) {
          Level1 = new global::Nexus.Trading.Level1Data();
        }
        Level1.MergeFrom(other.Level1);
      }
      if (other.level2_ != null) {
        if (level2_ == null) {
          Level2 = new global::Nexus.Trading.Level2Data();
        }
        Level2.MergeFrom(other.Level2);
      }
      if (other.DataType != global::Nexus.Trading.MarketData.Types.DataType.Level1Only) {
        DataType = other.DataType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 26: {
            if (level1_ == null) {
              Level1 = new global::Nexus.Trading.Level1Data();
            }
            input.ReadMessage(Level1);
            break;
          }
          case 34: {
            if (level2_ == null) {
              Level2 = new global::Nexus.Trading.Level2Data();
            }
            input.ReadMessage(Level2);
            break;
          }
          case 40: {
            DataType = (global::Nexus.Trading.MarketData.Types.DataType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 26: {
            if (level1_ == null) {
              Level1 = new global::Nexus.Trading.Level1Data();
            }
            input.ReadMessage(Level1);
            break;
          }
          case 34: {
            if (level2_ == null) {
              Level2 = new global::Nexus.Trading.Level2Data();
            }
            input.ReadMessage(Level2);
            break;
          }
          case 40: {
            DataType = (global::Nexus.Trading.MarketData.Types.DataType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MarketData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Data type indicator
      /// </summary>
      public enum DataType {
        [pbr::OriginalName("LEVEL1_ONLY")] Level1Only = 0,
        [pbr::OriginalName("LEVEL1_AND_LEVEL2")] Level1AndLevel2 = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Trading Signal
  /// </summary>
  public sealed partial class TradingSignal : pb::IMessage<TradingSignal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradingSignal> _parser = new pb::MessageParser<TradingSignal>(() => new TradingSignal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradingSignal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingSignal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingSignal(TradingSignal other) : this() {
      signalType_ = other.signalType_;
      confidence_ = other.confidence_;
      symbol_ = other.symbol_;
      positionSize_ = other.positionSize_;
      stopLoss_ = other.stopLoss_;
      takeProfit_ = other.takeProfit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingSignal Clone() {
      return new TradingSignal(this);
    }

    /// <summary>Field number for the "signal_type" field.</summary>
    public const int SignalTypeFieldNumber = 1;
    private global::Nexus.Trading.TradingSignal.Types.SignalType signalType_ = global::Nexus.Trading.TradingSignal.Types.SignalType.Neutral;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Nexus.Trading.TradingSignal.Types.SignalType SignalType {
      get { return signalType_; }
      set {
        signalType_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 2;
    private double confidence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position_size" field.</summary>
    public const int PositionSizeFieldNumber = 4;
    private double positionSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PositionSize {
      get { return positionSize_; }
      set {
        positionSize_ = value;
      }
    }

    /// <summary>Field number for the "stop_loss" field.</summary>
    public const int StopLossFieldNumber = 5;
    private double stopLoss_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StopLoss {
      get { return stopLoss_; }
      set {
        stopLoss_ = value;
      }
    }

    /// <summary>Field number for the "take_profit" field.</summary>
    public const int TakeProfitFieldNumber = 6;
    private double takeProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TakeProfit {
      get { return takeProfit_; }
      set {
        takeProfit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradingSignal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradingSignal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignalType != other.SignalType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      if (Symbol != other.Symbol) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PositionSize, other.PositionSize)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StopLoss, other.StopLoss)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TakeProfit, other.TakeProfit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SignalType != global::Nexus.Trading.TradingSignal.Types.SignalType.Neutral) hash ^= SignalType.GetHashCode();
      if (Confidence != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Confidence);
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (PositionSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PositionSize);
      if (StopLoss != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StopLoss);
      if (TakeProfit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TakeProfit);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SignalType != global::Nexus.Trading.TradingSignal.Types.SignalType.Neutral) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SignalType);
      }
      if (Confidence != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Confidence);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (PositionSize != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(PositionSize);
      }
      if (StopLoss != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(StopLoss);
      }
      if (TakeProfit != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TakeProfit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SignalType != global::Nexus.Trading.TradingSignal.Types.SignalType.Neutral) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SignalType);
      }
      if (Confidence != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Confidence);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (PositionSize != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(PositionSize);
      }
      if (StopLoss != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(StopLoss);
      }
      if (TakeProfit != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TakeProfit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SignalType != global::Nexus.Trading.TradingSignal.Types.SignalType.Neutral) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SignalType);
      }
      if (Confidence != 0D) {
        size += 1 + 8;
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (PositionSize != 0D) {
        size += 1 + 8;
      }
      if (StopLoss != 0D) {
        size += 1 + 8;
      }
      if (TakeProfit != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradingSignal other) {
      if (other == null) {
        return;
      }
      if (other.SignalType != global::Nexus.Trading.TradingSignal.Types.SignalType.Neutral) {
        SignalType = other.SignalType;
      }
      if (other.Confidence != 0D) {
        Confidence = other.Confidence;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.PositionSize != 0D) {
        PositionSize = other.PositionSize;
      }
      if (other.StopLoss != 0D) {
        StopLoss = other.StopLoss;
      }
      if (other.TakeProfit != 0D) {
        TakeProfit = other.TakeProfit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SignalType = (global::Nexus.Trading.TradingSignal.Types.SignalType) input.ReadEnum();
            break;
          }
          case 17: {
            Confidence = input.ReadDouble();
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 33: {
            PositionSize = input.ReadDouble();
            break;
          }
          case 41: {
            StopLoss = input.ReadDouble();
            break;
          }
          case 49: {
            TakeProfit = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SignalType = (global::Nexus.Trading.TradingSignal.Types.SignalType) input.ReadEnum();
            break;
          }
          case 17: {
            Confidence = input.ReadDouble();
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 33: {
            PositionSize = input.ReadDouble();
            break;
          }
          case 41: {
            StopLoss = input.ReadDouble();
            break;
          }
          case 49: {
            TakeProfit = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TradingSignal message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum SignalType {
        [pbr::OriginalName("NEUTRAL")] Neutral = 0,
        [pbr::OriginalName("BUY")] Buy = 1,
        [pbr::OriginalName("SELL")] Sell = 2,
        [pbr::OriginalName("STRONG_BUY")] StrongBuy = 3,
        [pbr::OriginalName("STRONG_SELL")] StrongSell = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Order
  /// </summary>
  public sealed partial class Order : pb::IMessage<Order>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Order> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Order() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Order(Order other) : this() {
      orderId_ = other.orderId_;
      symbol_ = other.symbol_;
      side_ = other.side_;
      quantity_ = other.quantity_;
      price_ = other.price_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Order Clone() {
      return new Order(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 3;
    private string side_ = "";
    /// <summary>
    /// BUY/SELL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 4;
    private double quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 5;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Order);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Order other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (Symbol != other.Symbol) return false;
      if (Side != other.Side) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Quantity, other.Quantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Side.Length != 0) hash ^= Side.GetHashCode();
      if (Quantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Quantity);
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      if (Side.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Side);
      }
      if (Quantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Quantity);
      }
      if (Price != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Price);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      if (Side.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Side);
      }
      if (Quantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Quantity);
      }
      if (Price != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Price);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Side.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (Quantity != 0D) {
        size += 1 + 8;
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Order other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Side.Length != 0) {
        Side = other.Side;
      }
      if (other.Quantity != 0D) {
        Quantity = other.Quantity;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 26: {
            Side = input.ReadString();
            break;
          }
          case 33: {
            Quantity = input.ReadDouble();
            break;
          }
          case 41: {
            Price = input.ReadDouble();
            break;
          }
          case 50: {
            Status = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 26: {
            Side = input.ReadString();
            break;
          }
          case 33: {
            Quantity = input.ReadDouble();
            break;
          }
          case 41: {
            Price = input.ReadDouble();
            break;
          }
          case 50: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Position
  /// </summary>
  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      symbol_ = other.symbol_;
      quantity_ = other.quantity_;
      avgPrice_ = other.avgPrice_;
      unrealizedPnl_ = other.unrealizedPnl_;
      realizedPnl_ = other.realizedPnl_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private double quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "avg_price" field.</summary>
    public const int AvgPriceFieldNumber = 3;
    private double avgPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AvgPrice {
      get { return avgPrice_; }
      set {
        avgPrice_ = value;
      }
    }

    /// <summary>Field number for the "unrealized_pnl" field.</summary>
    public const int UnrealizedPnlFieldNumber = 4;
    private double unrealizedPnl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UnrealizedPnl {
      get { return unrealizedPnl_; }
      set {
        unrealizedPnl_ = value;
      }
    }

    /// <summary>Field number for the "realized_pnl" field.</summary>
    public const int RealizedPnlFieldNumber = 5;
    private double realizedPnl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RealizedPnl {
      get { return realizedPnl_; }
      set {
        realizedPnl_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Quantity, other.Quantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgPrice, other.AvgPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnrealizedPnl, other.UnrealizedPnl)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RealizedPnl, other.RealizedPnl)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Quantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Quantity);
      if (AvgPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgPrice);
      if (UnrealizedPnl != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnrealizedPnl);
      if (RealizedPnl != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RealizedPnl);
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Quantity != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Quantity);
      }
      if (AvgPrice != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AvgPrice);
      }
      if (UnrealizedPnl != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(UnrealizedPnl);
      }
      if (RealizedPnl != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RealizedPnl);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Quantity != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Quantity);
      }
      if (AvgPrice != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AvgPrice);
      }
      if (UnrealizedPnl != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(UnrealizedPnl);
      }
      if (RealizedPnl != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RealizedPnl);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Quantity != 0D) {
        size += 1 + 8;
      }
      if (AvgPrice != 0D) {
        size += 1 + 8;
      }
      if (UnrealizedPnl != 0D) {
        size += 1 + 8;
      }
      if (RealizedPnl != 0D) {
        size += 1 + 8;
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Quantity != 0D) {
        Quantity = other.Quantity;
      }
      if (other.AvgPrice != 0D) {
        AvgPrice = other.AvgPrice;
      }
      if (other.UnrealizedPnl != 0D) {
        UnrealizedPnl = other.UnrealizedPnl;
      }
      if (other.RealizedPnl != 0D) {
        RealizedPnl = other.RealizedPnl;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 17: {
            Quantity = input.ReadDouble();
            break;
          }
          case 25: {
            AvgPrice = input.ReadDouble();
            break;
          }
          case 33: {
            UnrealizedPnl = input.ReadDouble();
            break;
          }
          case 41: {
            RealizedPnl = input.ReadDouble();
            break;
          }
          case 50: {
            Status = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 17: {
            Quantity = input.ReadDouble();
            break;
          }
          case 25: {
            AvgPrice = input.ReadDouble();
            break;
          }
          case 33: {
            UnrealizedPnl = input.ReadDouble();
            break;
          }
          case 41: {
            RealizedPnl = input.ReadDouble();
            break;
          }
          case 50: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Position List
  /// </summary>
  public sealed partial class PositionList : pb::IMessage<PositionList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionList> _parser = new pb::MessageParser<PositionList>(() => new PositionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PositionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionList(PositionList other) : this() {
      positions_ = other.positions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionList Clone() {
      return new PositionList(this);
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nexus.Trading.Position> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(10, global::Nexus.Trading.Position.Parser);
    private readonly pbc::RepeatedField<global::Nexus.Trading.Position> positions_ = new pbc::RepeatedField<global::Nexus.Trading.Position>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Nexus.Trading.Position> Positions {
      get { return positions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PositionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PositionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!positions_.Equals(other.positions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= positions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      positions_.WriteTo(output, _repeated_positions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      positions_.WriteTo(ref output, _repeated_positions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += positions_.CalculateSize(_repeated_positions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PositionList other) {
      if (other == null) {
        return;
      }
      positions_.Add(other.positions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            positions_.AddEntriesFrom(ref input, _repeated_positions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Empty message for requests that don't need parameters
  /// </summary>
  public sealed partial class Empty : pb::IMessage<Empty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nexus.Trading.NexusTradingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
